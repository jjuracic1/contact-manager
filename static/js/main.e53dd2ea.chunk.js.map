{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/FormInputGroup/index.js","components/contacts/AddContact/index.js","components/contacts/EditContact/index.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","FormInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","entries","abrupt","post","history","push","_this$state2","layout_FormInputGroup","EditContact","updateContact","match","params","put","url","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","basename","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e53dd2ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n        default:\r\n         return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            // {\r\n            //     id: 1,\r\n            //     name: 'John Doe',\r\n            //     email: 'jdoe@gmail.com',\r\n            //     phone: '555-555-5555'\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     name: 'Jurica Juračić',\r\n            //     email: 'jjuracic1@gmail.com',\r\n            //     phone: '666-666-6666'\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     name: 'Karen Walker',\r\n            //     email: 'kwaker@gmail.com',\r\n            //     phone: '777-777-7777'\r\n            // }\r\n        ],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        //         .then(response => this.setState({\r\n        //    contacts: response.data\r\n        //}));\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    onShowClick = (e) => {\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            //console.log('clicked');\r\n            //this.props.deleteClickHandler();\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            //.then(response => dispatch({type: 'DELETE_CONTACT', payload: id})\r\n            //)\r\n        }\r\n        catch(exc){\r\n\r\n        }\r\n\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    };\r\n\r\n    render() {\r\n        const {id, name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => { \r\n                    const {dispatch} = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <h4 className=\"card-header\">\r\n                                {name} <i onClick={this.onShowClick} \r\n                                className=\"fas fa-sort-down\"\r\n                                style={{cursor:'pointer'}}\r\n                                ></i>\r\n\r\n                                <i className=\"fas fa-times\" \r\n                                style={{cursor:'pointer', float:'right', color: 'red'}}\r\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                ></i>\r\n                                <Link to={`/contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                    style={{cursor: 'pointer', float: 'right', color:'black', marginRight: '1rem'}} />\r\n                                </Link>\r\n                            </h4>\r\n                            <div className={'card-body ' + (showContactInfo ? 'd-block' : 'd-none')}>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>                \r\n                            </div>\r\n                        </div>\r\n                    )}}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n    //deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\n\r\n    // deleteContact = (id) => {\r\n    //     //console.log(id);\r\n    //     const {contacts} = this.state;\r\n    //     const newContacts = contacts.filter(contact => contact.id !== id);\r\n    //     this.setState({\r\n    //         contacts: newContacts\r\n    //     });\r\n    // };\r\n \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n            {value => {\r\n                const {contacts} = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact List</span>\r\n                        </h1>\r\n                        {contacts.map(contact => \r\n                            <Contact key={contact.id} contact={contact} />        \r\n                            //   <Contact key={contact.id} contact={contact} \r\n                            //     deleteClickHandler={this.deleteContact.bind(this, contact.id)}  />\r\n                        )}\r\n                    </React.Fragment>\r\n            )}}  \r\n            </Consumer>\r\n        )\r\n        // const {contacts} = this.state;\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        // <div>\r\n        //     {/* <h1 style={{color:'red', fontSize: '50px'}}>{branding}</h1> */}\r\n        //     {/* <h1 style={headingStyle}>{branding}</h1> */}\r\n        //     <h1>{branding}</h1>\r\n        // </div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/contact-manager\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                               <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//     color:'green', \r\n//     fontSize: '50px'\r\n// };\r\n\r\n// function Header() {\r\n//     return (\r\n//         <div>\r\n//             <h1>Contact Manager</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst FormInputGroup = ({ label, name, value, placeholder, type, onChange, error}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} \r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {'is-invalid': error} )}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange} />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nFormInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nFormInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default FormInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../../context';\r\nimport FormInputGroup from '../../layout/FormInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const {name,email,phone}= this.state;\r\n\r\n        // validation\r\n        let errors={};\r\n        if (name === ''){\r\n            errors = {name: 'Name is required'};\r\n        }\r\n        if (email === ''){\r\n            errors = {...errors, email: 'Email is required'};\r\n        }\r\n        if (phone === ''){\r\n            errors = {...errors, phone: 'Phone is required'};\r\n        }\r\n        if (Object.entries(errors).length > 0 ) {\r\n            this.setState({errors});\r\n            //console.log(this.state.errors);\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users/', newContact);\r\n        // .then(response => \r\n        //     dispatch({type:'ADD_CONTACT', payload: response.data})\r\n        // )\r\n        dispatch({type:'ADD_CONTACT', payload: res.data});\r\n\r\n        // reset form\r\n        this.setState({\r\n            name:'', \r\n            email:'', \r\n            phone:'',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <FormInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name...\"        value={name} onChange={this.onChange} error={errors.name} />\r\n                                <FormInputGroup label=\"Email\" name=\"email\" placeholder=\"Enter Email...\"        value={email} onChange={this.onChange} type=\"email\" error={errors.email} />\r\n                                <FormInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone...\"        value={phone} onChange={this.onChange} error={errors.phone} />\r\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../../context';\r\nimport FormInputGroup from '../../layout/FormInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const url = `https://jsonplaceholder.typicode.com/users/${id}`;\r\n        const res = await axios.get(url);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const {name,email,phone}= this.state;\r\n\r\n        // validation\r\n        let errors={};\r\n        if (name === ''){\r\n            errors = {name: 'Name is required'};\r\n        }\r\n        if (email === ''){\r\n            errors = {...errors, email: 'Email is required'};\r\n        }\r\n        if (phone === ''){\r\n            errors = {...errors, phone: 'Phone is required'};\r\n        }\r\n        if (Object.entries(errors).length > 0 ) {\r\n            this.setState({errors});\r\n            //console.log(this.state.errors);\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // reset form\r\n        this.setState({\r\n            name:'', \r\n            email:'', \r\n            phone:'',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <FormInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name...\"        value={name} onChange={this.onChange} error={errors.name} />\r\n                                <FormInputGroup label=\"Email\" name=\"email\" placeholder=\"Enter Email...\"        value={email} onChange={this.onChange} type=\"email\" error={errors.email} />\r\n                                <FormInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone...\"        value={phone} onChange={this.onChange} error={errors.phone} />\r\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-primary btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ \r\n                title: data.title, \r\n                body: data.body\r\n            }));\r\n        //console.log('componentDidMount');\r\n    }\r\n\r\n    // // deprecated!!!\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount');\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('componentWillUpdate');\r\n    // }\r\n\r\n    // // deprecated!!!\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate');\r\n    // }\r\n\r\n    // // deprecated!!!\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null;\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     console.log('getSnapshotBeforeUpdate');\r\n    // }\r\n\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\n//import AddContactRef from './components/contacts/AddContactRef';\nimport Test from './components/test/Test';\n\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router  basename=\"/contact-manager\">\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            {/* <Contact name=\"John Doe\" email=\"jdoe@gmail.com\" phone=\"555-555-5555\" />\n            <Contact name=\"Jurica Juračić\" email=\"jjuracic1@gmail.com\" phone=\"666-666-6666\" /> */}\n            <Switch>\n              <Route exact path=\"/contact-manager\" component={Contacts} />\n              <Route exact path=\"/contact-manager/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact-manager/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/contact-manager/about\" component={About} />\n              <Route exact path=\"/contact-manager/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}